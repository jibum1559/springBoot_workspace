	구조적 다이어그램 : 클래스 객체 컴포넌트 배치 복합체 구조 패키지
	
	구조적 다이어그램 :  클래스 객체 컴포넌트 배치 복합체 구조 패키지
		구성요소 :  클래스이름 속성 연산 접근 제어자
		접근 제어자 : -(클래스 내부 접근만 허용 private)
				  +(클래스 외부 접근을 허용 public)
				  #(동일 패키지, 파생 클래스에서 접근 가능 protected)
				  ~(동일 패키지 클래스에서 접근 가능 default)


사물 : 다이어그램 안에서 관계가 형성될 수 있는 대상을 말함
	  모델을 구성하는 가장 중요한 요소
	  
	  		구조사물 : 시스템의 개념적 물리적인 요소를 표현 ex) 클래스 유스케이스 컴포넌트 노드
	  		행동사물 : 시간과 공간에 따른 요소 행위를 표현 ex) 상호작용 상태
	  		그룹사물 : 요소들을 그룹으로 묶어서 표현 ex) 패키지
	  		주해사물 : 부가적인 설명이나 제약조건 등을 표현
	  		
	  		
관계
	연관관계 : 사물 사이를 실선으로 연결해서 표현한 관계로 화살표 표현, 양방향의 관계의 경우 실선으로 연결, 다중도 선 위에 표기
			다중도 ? 1 = 1객체가 연관돼 있음
				   n = n개의 객체가 연관돼 있음
				0..1 = 연관된 객체가 없거나 1개만 존재
				0..* = 연관된 ㄱ객체가 없거나 다수일 수 있음
				1..* = 연관된 객체가 적어도 1개 이상
				n..* = 연관된 객체가 적어도 n개 이상
				n..m = 연관된 객체가 최소 n개 에서 최대 m개
				
	집합관계 : 하나의 사물이 다른 사물에 포함되어 있는 관계로 포함하는 쪽과 포함되는 쪽은 서로 독립적. 포함되는 쪽에서 포함되는 쪽으로 속이 빈 마름모를 연결해서 표현
	포함괸계 : 집합관계의 특수한 형태로 포함하는 사물의 변화가 포함되는 사물에게 영향을 미치는 관계
			포함되는 쪽에서 포함하는 쪽으로 속이 채워진 마름모를 연결해서 표현하는 관계
	일반화관계 : 하나의 사물이 다른 사물에 비해 더 일반적이거나 구체적인 관계
			 하위인 사물에서 상위인 사물 쪽으로 빈 화살표를 연결해서 표현
	의존관계 : 
	
	
다이어그램
	클래스 : 클래스와 클래스가 가지는 속성, 클래스 사이의 관계를 표현
	객체 : 클래스에 속한 사물들 인스턴스를 특정 시점에 객체와 객체사이의 관계로 표현
	컴포넌트 : 실제 구현 모듈이 컴포넌트 간의 관계나 컴포넌트 간의 인터페이스를 표현
	배치 : 결과물, 프로세스, 컴포넌트 등 물리적 요소들의 위치를 표현
	복합체 : 클래스나 컴포넌트가 복합구조를 가지는 경우 그 내부 구조를 표현
	패키지 :  유스케이스나 클래스 등의 모델 요소들을 그룹화한 패키지들간의 관계를 표현

	
행위 다이어그램
	유스케이스 다이어그램 :  사용자의 요구를 분석하는 것으로 기등 모델링 작업에 사용
	시퀀스 : 상호작용하는 시스템이나 객체들이 주고받는 메세지를 표현
	커뮤니케이션 :  동작에 참여하는 객체들이 주고받는 메세지나 객체들 간의 연관 관계를 표현
	상태 : 하나의 객체가 자신이 속한 클래스의 상태 변화 다른 객체와의 상호작용에 따라 상태가 어떻게 변화하는 지를 표현
	활동 : 시스템이 어떤 기능을 수행하는지 객체의 처리 로직이나 조건에 따른 처리흐름을 순서에 따라 
	상호작용 개요: 상호작용 다이어그램 간에 제어 흐름을 표현
	타이밍 : 객체 상태 변화와 시간 제약을 명시적으로 표현
	
	UML 확장 모델 스테레오 타입
		UML 기본적인 요소 이외에 새로운 요소를 만들어 내기 위한 확장 타입
		형태는 기본의 UML 요소를 그대로 사용하지만 내부 의미는 다른 목적으로 사용하도록 확장
		UML 스테레오 타입은 <<>> 기호를 사용해서 표현
			<<include>> : 하나의 유스케이스가 어떤 시점에 반드시 다른 유스케이스를 포함하는 관계
			<<extend>> : 하나의 유스케이스가 어떤 시점에 다른 유스케이스를 실행할 수 있고 그렇지 않을 수도 있는 확장 단계
			<<interface>> : 모든 메서드가 추상 메서드이고, 바로 인스턴스를 만들 수 없는 클래스로 추상 메서드와 상수만으로 구성된 클래스
			<<entity>> : 일반적으로 정보 또는 오래 지속되는 연관된 행위를 형상화 하는 클래스로 유스케이스 처리 흐름이 수행되는 과정에서 기억장치에 저장되어야 할 정보를 표현하는 클래스
			<<boundary>> : 시스템과 외부 활동과 상호작용을 담당하는 클래스
			<<control>> : 시스템이 제공하는 기능의 로직 및 제어를 담당하는 클래스